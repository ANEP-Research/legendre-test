{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1","program":"/Users/quickshell/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bitset_core","--edition=2018","/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=528237157e3f57ee","-C","extra-filename=-528237157e3f57ee","--out-dir","/Users/quickshell/legendre-sqnum/target/rls/debug/deps","-L","dependency=/Users/quickshell/legendre-sqnum/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/quickshell/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quickshell/legendre-sqnum/target/rls/debug/deps/libbitset_core-528237157e3f57ee.rmeta"},"prelude":{"crate_id":{"name":"bitset_core","disambiguator":[2185017865480919998,17740643632112510726]},"crate_root":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src","external_crates":[{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}}],"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":0,"byte_end":11146,"line_start":1,"line_end":380,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":9929,"byte_end":9935,"line_start":331,"line_end":331,"column_start":20,"column_end":26},"alias_span":null,"name":"BitFmt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":0,"byte_end":11146,"line_start":1,"line_end":380,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":46},{"krate":0,"index":78}],"decl_id":null,"docs":"BitSet\n======","sig":null,"attributes":[{"value":"!\nBitSet\n======\n\n[![MIT License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![crates.io](https://img.shields.io/crates/v/bitset-core.svg)](https://crates.io/crates/bitset-core)\n[![docs.rs](https://docs.rs/bitset-core/badge.svg)](https://docs.rs/bitset-core)\n\nStraightforward, no-std compatible, simd optimized, BitSet API.\n\nExamples\n--------\n\nThis crate provides its functionality through the `BitSet` trait.\n\n```rust\nuse bitset_core::BitSet;\n```\n\nThe containers for the bitset provided by this crate are unsigned integers, slices of unsigned integers and simd-like types, and `Vec<_>`, `Box<[_]>` if the `std` feature is enabled (enabled by default).\n\n```rust\nuse bitset_core::BitSet;\n\nlet mut bits = [0u32; 4];\nassert_eq!(bits.bit_len(), 4 * 32);\n\nbits.bit_init(true); // Set all bits to true\nassert!(bits.bit_all()); // All bits are set\n\nbits.bit_reset(13); // Reset the 13th bit\nassert!(bits.bit_any()); // At least some bits are set\n\nbits.bit_flip(42); // Flip the 42nd bit twice (no change)\nbits.bit_flip(42);\n\nbits.bit_cond(1, false); // Set the bit to runtime value\n\nassert_eq!(bits.bit_test(42), true);\nassert_eq!(bits.bit_test(13), false);\nassert_eq!(bits.bit_test(1), false);\n\nassert_eq!(bits.bit_count(), 4 * 32 - 2);\n```\n\nSimd optimization is provided by using underlying primitives such as `[u32; 4]` which match the hardware's 128-bit simd registers. The compiler is heavily encouraged to vectorize these primitives.\n\n```rust\nuse bitset_core::BitSet;\n\nlet mut a = [[0x21212121u32; 4]; 16];\nlet b = [[0x55555555u32; 4]; 16];\n\na.bit_or(&b);\na.bit_and(&b);\na.bit_xor(&b);\na.bit_not();\n\nassert_eq!(a, [[0xffffffffu32; 4]; 16]);\n```\n\nFor non fixed-size containers using the `std` feature `BitSet` is also implemented for `Vec<T>` and `Box<[T]>` (where `[T]`: `BitSet`).\n\nFuture work includes making everything const fn to enable all of this at compiletime, blocked on support for traits in const fn.\n\nLicense\n-------\n\nLicensed under [MIT License](https://opensource.org/licenses/MIT), see [license.txt](license.txt).\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, shall be licensed as above, without any additional terms or conditions.\n*/","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":0,"byte_end":2285,"line_start":1,"line_end":75,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2287,"byte_end":2297,"line_start":77,"line_end":77,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":5},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2396,"byte_end":2402,"line_start":84,"line_end":84,"column_start":11,"column_end":17},"name":"BitSet","qualname":"::BitSet","value":"BitSet","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" The BitSet API.\n","sig":null,"attributes":[{"value":"/ The BitSet API.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2366,"byte_end":2385,"line_start":83,"line_end":83,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2444,"byte_end":2451,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"bit_len","qualname":"::BitSet::bit_len","value":"pub fn bit_len(&Self) -> usize","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns total number of bits.\n","sig":null,"attributes":[{"value":"/ Returns total number of bits.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2406,"byte_end":2439,"line_start":85,"line_end":85,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2501,"byte_end":2509,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"name":"bit_init","qualname":"::BitSet::bit_init","value":"pub fn bit_init(&mut Self, bool) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Initializes all bits.\n","sig":null,"attributes":[{"value":"/ Initializes all bits.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2471,"byte_end":2496,"line_start":88,"line_end":88,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2585,"byte_end":2592,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"bit_fmt","qualname":"::BitSet::bit_fmt","value":"pub fn bit_fmt(&Self) -> &BitFmt<Self>","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Format the bits.\n","sig":null,"attributes":[{"value":"/ Format the bits.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2549,"byte_end":2569,"line_start":90,"line_end":90,"column_start":2,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2571,"byte_end":2580,"line_start":91,"line_end":91,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2711,"byte_end":2719,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"bit_test","qualname":"::BitSet::bit_test","value":"pub fn bit_test(&Self, usize) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if the given bit is set.\n","sig":null,"attributes":[{"value":"/ Returns if the given bit is set.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2670,"byte_end":2706,"line_start":96,"line_end":96,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2777,"byte_end":2784,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"bit_set","qualname":"::BitSet::bit_set","value":"pub fn bit_set(&mut Self, usize) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Sets the given bit.\n","sig":null,"attributes":[{"value":"/ Sets the given bit.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2749,"byte_end":2772,"line_start":98,"line_end":98,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2853,"byte_end":2862,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"bit_reset","qualname":"::BitSet::bit_reset","value":"pub fn bit_reset(&mut Self, usize) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Resets the given bit.\n","sig":null,"attributes":[{"value":"/ Resets the given bit.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2823,"byte_end":2848,"line_start":100,"line_end":100,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2930,"byte_end":2938,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"bit_flip","qualname":"::BitSet::bit_flip","value":"pub fn bit_flip(&mut Self, usize) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Flips the given bit.\n","sig":null,"attributes":[{"value":"/ Flips the given bit.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2901,"byte_end":2925,"line_start":102,"line_end":102,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3029,"byte_end":3037,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"bit_cond","qualname":"::BitSet::bit_cond","value":"pub fn bit_cond(&mut Self, usize, bool) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Conditionally sets or resets the given bit.\n","sig":null,"attributes":[{"value":"/ Conditionally sets or resets the given bit.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":2977,"byte_end":3024,"line_start":104,"line_end":104,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3127,"byte_end":3134,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"bit_all","qualname":"::BitSet::bit_all","value":"pub fn bit_all(&Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if all bits are set.\n","sig":null,"attributes":[{"value":"/ Returns if all bits are set.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3090,"byte_end":3122,"line_start":107,"line_end":107,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3189,"byte_end":3196,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"bit_any","qualname":"::BitSet::bit_any","value":"pub fn bit_any(&Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if any bits are set.\n","sig":null,"attributes":[{"value":"/ Returns if any bits are set.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3152,"byte_end":3184,"line_start":109,"line_end":109,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3270,"byte_end":3278,"line_start":113,"line_end":113,"column_start":5,"column_end":13},"name":"bit_none","qualname":"::BitSet::bit_none","value":"pub fn bit_none(&Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if none of the bits are set.\n","sig":null,"attributes":[{"value":"/ Returns if none of the bits are set.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3214,"byte_end":3254,"line_start":111,"line_end":111,"column_start":2,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3256,"byte_end":3265,"line_start":112,"line_end":112,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3365,"byte_end":3371,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"bit_eq","qualname":"::BitSet::bit_eq","value":"pub fn bit_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if the two bitsets are equal.\n","sig":null,"attributes":[{"value":"/ Returns if the two bitsets are equal.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3319,"byte_end":3360,"line_start":117,"line_end":117,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3460,"byte_end":3472,"line_start":120,"line_end":120,"column_start":5,"column_end":17},"name":"bit_disjoint","qualname":"::BitSet::bit_disjoint","value":"pub fn bit_disjoint(&Self, &Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if the two bitsets have no bits in common.\n","sig":null,"attributes":[{"value":"/ Returns if the two bitsets have no bits in common.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3401,"byte_end":3455,"line_start":119,"line_end":119,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3546,"byte_end":3556,"line_start":122,"line_end":122,"column_start":5,"column_end":15},"name":"bit_subset","qualname":"::BitSet::bit_subset","value":"pub fn bit_subset(&Self, &Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if self is a subset of rhs.\n","sig":null,"attributes":[{"value":"/ Returns if self is a subset of rhs.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3502,"byte_end":3541,"line_start":121,"line_end":121,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3643,"byte_end":3655,"line_start":125,"line_end":125,"column_start":5,"column_end":17},"name":"bit_superset","qualname":"::BitSet::bit_superset","value":"pub fn bit_superset(&Self, &Self) -> bool","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns if self is a superset of rhs.\n","sig":null,"attributes":[{"value":"/ Returns if self is a superset of rhs.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3586,"byte_end":3627,"line_start":123,"line_end":123,"column_start":2,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3629,"byte_end":3638,"line_start":124,"line_end":124,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3733,"byte_end":3739,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"bit_or","qualname":"::BitSet::bit_or","value":"pub fn bit_or(&mut Self, &Self) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Bitwise OR.\n","sig":null,"attributes":[{"value":"/ Bitwise OR.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3713,"byte_end":3728,"line_start":129,"line_end":129,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3799,"byte_end":3806,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"bit_and","qualname":"::BitSet::bit_and","value":"pub fn bit_and(&mut Self, &Self) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Bitwise AND.\n","sig":null,"attributes":[{"value":"/ Bitwise AND.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3778,"byte_end":3794,"line_start":131,"line_end":131,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3883,"byte_end":3893,"line_start":134,"line_end":134,"column_start":5,"column_end":15},"name":"bit_andnot","qualname":"::BitSet::bit_andnot","value":"pub fn bit_andnot(&mut Self, &Self) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Bitwise AND after NOT of rhs.\n","sig":null,"attributes":[{"value":"/ Bitwise AND after NOT of rhs.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3845,"byte_end":3878,"line_start":133,"line_end":133,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3953,"byte_end":3960,"line_start":136,"line_end":136,"column_start":5,"column_end":12},"name":"bit_xor","qualname":"::BitSet::bit_xor","value":"pub fn bit_xor(&mut Self, &Self) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Bitwise XOR.\n","sig":null,"attributes":[{"value":"/ Bitwise XOR.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3932,"byte_end":3948,"line_start":135,"line_end":135,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":4020,"byte_end":4027,"line_start":138,"line_end":138,"column_start":5,"column_end":12},"name":"bit_not","qualname":"::BitSet::bit_not","value":"pub fn bit_not(&mut Self) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Bitwise NOT.\n","sig":null,"attributes":[{"value":"/ Bitwise NOT.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":3999,"byte_end":4015,"line_start":137,"line_end":137,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":4089,"byte_end":4097,"line_start":140,"line_end":140,"column_start":5,"column_end":13},"name":"bit_mask","qualname":"::BitSet::bit_mask","value":"pub fn bit_mask(&mut Self, &Self, &Self) -> &mut Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Bitwise combine with MASK.\n","sig":null,"attributes":[{"value":"/ Bitwise combine with MASK.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":4054,"byte_end":4084,"line_start":139,"line_end":139,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":4189,"byte_end":4198,"line_start":143,"line_end":143,"column_start":5,"column_end":14},"name":"bit_count","qualname":"::BitSet::bit_count","value":"pub fn bit_count(&Self) -> usize","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Counts the number of set bits.\n","sig":null,"attributes":[{"value":"/ Counts the number of set bits.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/lib.rs","byte_start":4150,"byte_end":4184,"line_start":142,"line_end":142,"column_start":2,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":25057,"byte_end":25063,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"BitFmt","qualname":"::fmt::BitFmt","value":"","parent":null,"children":[],"decl_id":null,"docs":" BitSet formatter.\n","sig":null,"attributes":[{"value":"/ BitSet formatter.","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":25003,"byte_end":25024,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"repr(transparent)","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":25025,"byte_end":25045,"line_start":5,"line_end":5,"column_start":1,"column_end":21}}]}],"impls":[{"id":5,"kind":"Direct","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/stdty.rs","byte_start":24834,"byte_end":24837,"line_start":3,"line_end":3,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/stdty.rs","byte_start":24911,"byte_end":24914,"line_start":6,"line_end":6,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":26716,"byte_end":26722,"line_start":56,"line_end":56,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":26853,"byte_end":26859,"line_start":61,"line_end":61,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":27069,"byte_end":27075,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":27229,"byte_end":27235,"line_start":75,"line_end":75,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/stdty.rs","byte_start":24834,"byte_end":24837,"line_start":3,"line_end":3,"column_start":30,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/stdty.rs","byte_start":24911,"byte_end":24914,"line_start":6,"line_end":6,"column_start":32,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":26716,"byte_end":26722,"line_start":56,"line_end":56,"column_start":43,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":6208}},{"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":26853,"byte_end":26859,"line_start":61,"line_end":61,"column_start":41,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":27069,"byte_end":27075,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":6216}},{"span":{"file_name":"/Users/quickshell/.cargo/registry/src/github.com-1ecc6299db9ec823/bitset-core-0.1.1/src/fmt.rs","byte_start":27229,"byte_end":27235,"line_start":75,"line_end":75,"column_start":44,"column_end":50},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":6214}}]}